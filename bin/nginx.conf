

upstream music-api {
  server 127.0.0.1:3000 fail_timeout=0;
}

server {
  listen 80;
  listen 443 ssl http2;
  server_name www.tigerzh.com;
  ssl_certificate /etc/nginx/cert/www.tigerzh.com.pem;
  ssl_certificate_key /etc/nginx/cert/www.tigerzh.com.key;
  return 301 $scheme://tigerzh.com$request_uri;
}

server {
  listen 80;
  listen 443 ssl http2;
  server_name tigerzh.com;
  ssl_certificate /etc/nginx/cert/tigerzh.com.pem;
  ssl_certificate_key /etc/nginx/cert/tigerzh.com.key;

  ssl_session_timeout 1h;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;
  ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
  ssl_session_cache shared:SSL:50m;
  resolver 8.8.8.8 8.8.4.4 valid=300s;
  resolver_timeout 5s;
  ssl_session_tickets off;
  ssl_stapling_verify on;
  client_max_body_size 100M;
  charset utf-8;

  # 强制重定向到 HTTPS
  if ($scheme != "https") {
    return 301 https://$host$request_uri;
  }

  location /api/music/ {
    rewrite ^/api/music/(.*)$ /$1 break; #重写
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://music-api;
  }

  location /music/ {
    alias /home/app/music/dist/;
    index index.html;
    try_files $uri $uri/ /music/index.html;

    # 设置静态资源的缓存控制头
    location ~* \.(gif|jpg|jpeg|bmp|png|ico|txt|js|css|woff|woff2|html)$ {
      add_header Cache-Control 'no-cache, max-age=0';
      expires 90d;
    }
  }

  location / {
    alias /home/app/document/dist/;
    index index.html;
    try_files $uri $uri/ /index.html;

    # 设置静态资源的缓存控制头
    location ~* \.(gif|jpg|jpeg|bmp|png|ico|txt|js|css|woff|woff2|html)$ {
      add_header Cache-Control 'no-cache, max-age=0';
      expires 90d;
    }
  }
}
